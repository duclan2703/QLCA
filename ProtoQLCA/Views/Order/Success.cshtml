@model ProtoQLCA.Models.OrderModel
@{
    ViewBag.Title = "Success";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="navbar navbar-inverse navbar-fixed-top">
    <div class="container">
        <div class="navbar-header">
            <a href="/Home/Mainpage" class="navbar-brand">Home</a>
        </div>
        <ul class="nav navbar-nav">
            <li class="nav-item">
                <a class="nav-link" href="/Order/Personalform">Tạo phiếu ăn cá nhân</a>
            </li>
            <li>
                <a class="nav-link" href="/Order/Multipleform">Tạo phiếu ăn tập thể</a>
            </li>
            <li class="nav-item dropdown">
                <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    Xin chào @HttpContext.Current.User.Identity.Name
                </a>
                <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                    <a class="dropdown-item" href="/Home/ChangePassword">Đổi mật khẩu</a>
                    @*<a class="dropdown-item" href="#">Another action</a>*@
                    <div class="dropdown-divider"></div>
                    <a class="dropdown-item" href="/Home/Logout">Đăng xuất</a>
                </div>
            </li>
        </ul>
    </div>
</div>

<h2>Danh sách phiếu ăn</h2>

@using (Html.BeginForm())
{
    <div class="panel panel-danger">
        <div class="panel-body">
            <div class="row" id="filter">
                <form method="POST">
                    <div class="form-group col-md-3 col-xs-6">
                        <select class="listname form-control select2-hidden-accessible" id="test" name="Name" style="width:100%" aria-hidden="true"></select>
                    </div>
                    <div class="form-group col-md-3 col-xs-6">
                        @Html.DropDownListFor(model => model.OfficeName, (IEnumerable<SelectListItem>)ViewBag.Listname, "Chọn phòng-ban", new { @class = "form-control", id="OfficeName" })
                    </div>
                    <div class="form-group col-md-3 col-xs-6">
                        <input class="form-control text-box filter" placeholder="Từ ngày" data-val="true" id="FromDate" name="FromDate" type="text" autocomplete="off" value="@Model.FromDate">
                    </div>
                    <div class="form-group col-md-3 col-xs-6">
                        <input class="form-control text-box filter" placeholder="Đến ngày" data-val="true" id="ToDate" name="ToDate" type="text" autocomplete="off" value="@Model.ToDate">
                    </div>
                </form>
            </div>
        </div>
        <div class="panel-footer">
            <button type="submit" class="btn btn-primary" style="margin-left:45%">Tìm kiếm</button>
        </div>
    </div>
}

<div class="panel panel-default">
    <div class="panel-heading">
        <button type="submit" id="refresh" class="btn btn-default" data-command="reset">Làm mới</button>
        <button onclick="Export()" class="btn btn-default" style="margin-left: 917px">Tải file Excel</button>
    </div>
    <div class="panel-body">
        <table class="table paginated">
            <tr>
                <th>Tên</th>
                <th>Phòng - ban</th>
                <th>Ngày tạo phiếu</th>
                <th>Ca</th>
                <th>Ngày sửa phiếu</th>
                <th>Người sửa</th>
                <th></th>
            </tr>

            @foreach (var item in Model.Listorder)
            {
                <tr>
                    <td class="Name">@Html.DisplayFor(modelItem => item.Name)</td>
                    <td class="Office">@Html.DisplayFor(modelItem => item.OfficeName)</td>
                    <td>@Convert.ToDateTime(item.OrderDate).ToString("dd/MM/yyyy")</td>
                    <td>@Html.DisplayFor(modelItem => item.ShiftName)</td>
                    <td>@Convert.ToDateTime(item.EditDate).ToString("dd/MM/yyyy")</td>
                    <td>@Html.DisplayFor(modelItem => item.EditBy)</td>

                    <td>
                        <button onclick="location.href='/Order/Edit/@item.OrderID'" class="edit btn btn-default" style="margin-left:0%">Edit</button>
                    </td>
                </tr>
            }
        </table>
        <div>
        </div>
    </div>
</div>

<div>
    @Html.ActionLink("Về trang chính", "Mainpage", "Home")
</div>


@*page script*@
<script>
    $(function () {
        $('table.paginated').each(function () {
            var currentPage = 0;
            var numPerPage = 10;
            var $table = $(this);
            $table.bind('repaginate', function () {
                $table.find('tbody tr').hide().slice(currentPage * numPerPage, (currentPage + 1) * numPerPage).show();
            });
            $table.trigger('repaginate');
            var numRows = $table.find('tbody tr').length;
            var numPages = Math.ceil(numRows / numPerPage);
            var $pager = $('<div class="pager" style="text-align:left"></div>');
            var $previous = $('<span class="previous btn"><</spnan>');
            var $next = $('<span class="next btn">></spnan>');
            for (var page = 0; page < numPages; page++) {
                $('<span class="page-number btn"></span>').text(page + 1).bind('click', {
                    newPage: page
                }, function (event) {
                    currentPage = event.data['newPage'];
                    $table.trigger('repaginate');
                    $(this).addClass('active').siblings().removeClass('active');
                }).appendTo($pager).addClass('clickable');
            }
            $pager.insertAfter($table).find('span.page-number:first').addClass('active');
            $previous.insertBefore('span.page-number:first');
            $next.insertAfter('span.page-number:last');

            $next.click(function (e) {
                $previous.addClass('clickable');
                $pager.find('.active').next('.page-number.clickable').click();
            });
            $previous.click(function (e) {
                $next.addClass('clickable');
                $pager.find('.active').prev('.page-number.clickable').click();
            });
            $table.on('repaginate', function () {
                $next.addClass('clickable');
                $previous.addClass('clickable');

                setTimeout(function () {
                    var $active = $pager.find('.page-number.active');
                    if ($active.next('.page-number.clickable').length === 0) {
                        $next.removeClass('clickable');
                    } else if ($active.prev('.page-number.clickable').length === 0) {
                        $previous.removeClass('clickable');
                    }
                });
            });
            $table.trigger('repaginate');
        });
    });
</script>

@*disable script*@
<script type="text/javascript" defer="defer">

    var enableDisable = function () {
        var hours = new Date().getHours();
        var elems = document.getElementsByClassName('edit btn btn-default');
        if (hours == 9 || hours == 13) {
            for (var i = 0; i < elems.length; i++) {
                elems[i].disabled = false;
            }
        }
        else {
            for (var i = 0; i < elems.length; i++) {
                elems[i].disabled = true;
            }
        }
    };
    setInterval(enableDisable, 1000 * 60);
    enableDisable();

    $(document).ready(function () {
        $('#test').select2({
            placeholder: "Chọn tên nhân viên",
            ajax: {
                url: "/Order/GetListName",
                dataType: 'json',
                delay: 250,
                data: function (params) {
                    var query = {
                        keyword: params.term,
                        fetchsize: 10,
                    };
                    return query;
                },
                //data lay trong controller
                processResults: function (data) {
                    results = [];
                    for (var i = 0; i < data.length; i++) {
                        results.push({ id: data[i].ID, text: data[i].Name });
                    }
                    return {
                        results: results
                    };
                },
                cache: true
            },
        })
    })
     
    $('#refresh').click(function () {
        window.location.href = window.location.href;
    });

    $j2(document).ready(function () {
        $j2('#FromDate').datepicker({
            dateFormat: "dd-mm-yy",
        });
    });
    $j2(document).ready(function () {
        $j2('#ToDate').datepicker({
            dateFormat: "dd-mm-yy",
        });
    });

    function Export() {
            name = $("#test option:selected").text();
            office = $("#OfficeName").val();
            fromdate = $("#FromDate").val();
            todate = $("#ToDate").val();
            var filter = {
                Name: name,
                OfficeName: office,
                FromDate: fromdate, 
                ToDate: todate
            };
        //$.ajax({
        //    type: "GET",
        //    contentType: "application/json; charset=utf-8",
            
            var url = '/Order/Export?Name=' + name + '&OfficeName=' + office + '&FromDate=' + fromdate + '&ToDate=' + todate;
            window.location = url;
            //success: function (data) {
            //    location.reload();
            //    alert('Tạo tài khoản thành công');
            //},
            //failure: function (response) {
            //    alert('Tạo tài khoản thất bại');
            //},
            //error: function (response) {
            //    alert('Có lỗi xảy ra');
            //}
        //});
    }
</script>